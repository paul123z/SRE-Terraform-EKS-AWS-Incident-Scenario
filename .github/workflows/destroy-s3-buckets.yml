name: Destroy S3 buckets After Teardown.yml

on:
  workflow_dispatch:
    inputs:
      confirm_destruction:
        description: 'Type "DELETE ALL BUCKETS" to confirm complete S3 bucket destruction'
        required: true
        type: string
      dry_run:
        description: 'Dry run - show what would be deleted without actually deleting'
        required: false
        type: boolean
        default: true

jobs:
  destroy-s3-buckets:
    name: üóëÔ∏è Destroy All S3 Buckets
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-1
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y jq
        
    - name: Validate confirmation input
      run: |
        if [ "${{ inputs.confirm_destruction }}" != "DELETE ALL BUCKETS" ]; then
          echo "‚ùå ERROR: Confirmation phrase not provided correctly"
          echo "Please type exactly: DELETE ALL BUCKETS"
          exit 1
        fi
        echo "‚úÖ Confirmation validated"
        
    - name: List all S3 buckets
      run: |
        echo "üîç Listing all S3 buckets in your AWS account..."
        aws s3api list-buckets --query 'Buckets[*].{Name:Name,CreationDate:CreationDate}' --output table
        
        BUCKET_COUNT=$(aws s3api list-buckets --query 'length(Buckets)')
        echo ""
        echo "üìä Total buckets found: $BUCKET_COUNT"
        
    - name: Destroy S3 buckets (Dry Run)
      if: inputs.dry_run == true
      run: |
        echo "üß™ DRY RUN MODE - No actual deletion will occur"
        echo "=================================="
        
        BUCKETS=$(aws s3api list-buckets --query 'Buckets[*].Name' --output text)
        
        if [ -z "$BUCKETS" ]; then
          echo "‚úÖ No S3 buckets found to delete"
          exit 0
        fi
        
        echo "The following buckets WOULD be deleted:"
        for bucket in $BUCKETS; do
          echo "üóëÔ∏è  Would delete bucket: $bucket"
          
          # Show objects that would be deleted
          OBJECT_COUNT=$(aws s3api list-objects-v2 --bucket "$bucket" --query 'length(Contents)' 2>/dev/null || echo "0")
          if [ "$OBJECT_COUNT" != "0" ] && [ "$OBJECT_COUNT" != "null" ]; then
            echo "   üìÑ Contains $OBJECT_COUNT objects that would be deleted"
          fi
          
          # Show versions that would be deleted
          VERSION_COUNT=$(aws s3api list-object-versions --bucket "$bucket" --query 'length(Versions)' 2>/dev/null || echo "0")
          if [ "$VERSION_COUNT" != "0" ] && [ "$VERSION_COUNT" != "null" ]; then
            echo "   üì¶ Contains $VERSION_COUNT object versions that would be deleted"
          fi
          
          # Show delete markers that would be deleted
          DELETE_MARKER_COUNT=$(aws s3api list-object-versions --bucket "$bucket" --query 'length(DeleteMarkers)' 2>/dev/null || echo "0")
          if [ "$DELETE_MARKER_COUNT" != "0" ] && [ "$DELETE_MARKER_COUNT" != "null" ]; then
            echo "   üè∑Ô∏è  Contains $DELETE_MARKER_COUNT delete markers that would be removed"
          fi
          
          echo ""
        done
        
        echo "=================================="
        echo "üß™ DRY RUN COMPLETE - No changes made"
        echo "To actually delete buckets, set 'dry_run' to false"
        
    - name: Destroy S3 buckets (REAL DELETION)
      if: inputs.dry_run == false
      run: |
        echo "üö® REAL DELETION MODE - Permanently destroying all S3 buckets"
        echo "============================================================="
        
        # Get list of buckets
        echo "üìã Listing all S3 buckets..."
        BUCKETS=$(aws s3api list-buckets --query 'Buckets[*].Name' --output text 2>&1)
        BUCKET_LIST_EXIT_CODE=$?
        
        echo "üìã Bucket list command exit code: $BUCKET_LIST_EXIT_CODE"
        echo "üìã Found buckets: '$BUCKETS'"
        
        if [ $BUCKET_LIST_EXIT_CODE -ne 0 ]; then
          echo "‚ùå ERROR: Failed to list S3 buckets!"
          echo "Error details: $BUCKETS"
          exit 1
        fi
        
        if [ -z "$BUCKETS" ] || [ "$BUCKETS" = "None" ]; then
          echo "‚úÖ No S3 buckets found to delete"
          exit 0
        fi
        
        DELETED_COUNT=0
        FAILED_COUNT=0
        
        # Process each bucket
        for bucket in $BUCKETS; do
          echo ""
          echo "üóëÔ∏è  Destroying bucket: $bucket"
          
          # Step 1: Empty the bucket completely (this handles all objects, versions, and delete markers)
          echo "   üßπ Emptying bucket completely..."
          aws s3 rm "s3://$bucket" --recursive 2>&1
          S3_RM_EXIT_CODE=$?
          echo "   üìä s3 rm exit code: $S3_RM_EXIT_CODE"
          
          # Step 2: Delete all object versions and delete markers
          echo "   üóÇÔ∏è  Removing all object versions and delete markers..."
          aws s3api list-object-versions --bucket "$bucket" 2>&1 | head -20
          
          # Use aws s3api to delete versions if they exist
          aws s3api list-object-versions --bucket "$bucket" --output json > /tmp/versions_full.json 2>&1
          LIST_VERSIONS_EXIT_CODE=$?
          echo "   üìä list-object-versions exit code: $LIST_VERSIONS_EXIT_CODE"
          
          if [ $LIST_VERSIONS_EXIT_CODE -eq 0 ]; then
            # Extract and delete versions
            jq '{Objects: [.Versions[]? | {Key, VersionId}]}' /tmp/versions_full.json > /tmp/versions.json 2>/dev/null || echo '{"Objects": []}' > /tmp/versions.json
            jq '{Objects: [.DeleteMarkers[]? | {Key, VersionId}]}' /tmp/versions_full.json > /tmp/delete-markers.json 2>/dev/null || echo '{"Objects": []}' > /tmp/delete-markers.json
            
            VERSION_COUNT=$(jq '.Objects | length' /tmp/versions.json)
            DELETE_MARKER_COUNT=$(jq '.Objects | length' /tmp/delete-markers.json)
            echo "   üìä Found $VERSION_COUNT versions and $DELETE_MARKER_COUNT delete markers"
            
            if [ "$VERSION_COUNT" -gt 0 ]; then
              echo "   üóëÔ∏è  Deleting $VERSION_COUNT object versions..."
              aws s3api delete-objects --bucket "$bucket" --delete file:///tmp/versions.json 2>&1
              echo "   üìä Delete versions exit code: $?"
            fi
            
            if [ "$DELETE_MARKER_COUNT" -gt 0 ]; then
              echo "   üóëÔ∏è  Deleting $DELETE_MARKER_COUNT delete markers..."
              aws s3api delete-objects --bucket "$bucket" --delete file:///tmp/delete-markers.json 2>&1
              echo "   üìä Delete markers exit code: $?"
            fi
          fi
          
          # Step 3: Delete the bucket itself
          echo "   üóëÔ∏è  Deleting bucket..."
          DELETE_RESULT=$(aws s3api delete-bucket --bucket "$bucket" 2>&1)
          DELETE_EXIT_CODE=$?
          
          echo "   üìä Delete bucket exit code: $DELETE_EXIT_CODE"
          
          if [ $DELETE_EXIT_CODE -eq 0 ]; then
            echo "   ‚úÖ Successfully deleted bucket: $bucket"
            DELETED_COUNT=$((DELETED_COUNT + 1))
          else
            echo "   ‚ùå Failed to delete bucket: $bucket"
            echo "   üîç Error details: $DELETE_RESULT"
            FAILED_COUNT=$((FAILED_COUNT + 1))
          fi
          
          echo "   üìä Running totals - Deleted: $DELETED_COUNT, Failed: $FAILED_COUNT"
        done
        
        # Final summary
        echo ""
        echo "============================================================="
        echo "üìä FINAL SUMMARY:"
        echo "   ‚úÖ Buckets successfully deleted: $DELETED_COUNT"
        echo "   ‚ùå Buckets failed to delete: $FAILED_COUNT"
        
        # Clean up temp files
        rm -f /tmp/versions.json /tmp/delete-markers.json /tmp/versions_full.json 2>/dev/null
        
        # Check final result
        if [ $FAILED_COUNT -gt 0 ]; then
          echo ""
          echo "‚ùå Some buckets could not be deleted!"
          echo "üîç Checking remaining buckets..."
          aws s3api list-buckets --query 'Buckets[*].Name' --output table 2>&1
          exit 1
        else
          echo ""
          echo "üéâ ALL S3 BUCKETS HAVE BEEN PERMANENTLY DESTROYED!"
          exit 0
        fi
        
    - name: Final verification
      run: |
        echo ""
        echo "üîç Final S3 bucket verification..."
        REMAINING_BUCKETS=$(aws s3api list-buckets --query 'length(Buckets)')
        
        if [ "$REMAINING_BUCKETS" = "0" ]; then
          echo "‚úÖ SUCCESS: No S3 buckets remain in your AWS account"
        else
          echo "‚ö†Ô∏è  WARNING: $REMAINING_BUCKETS bucket(s) still exist:"
          aws s3api list-buckets --query 'Buckets[*].Name' --output table
        fi
