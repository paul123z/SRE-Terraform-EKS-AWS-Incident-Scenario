name: Deploy Application Only

on:
  workflow_dispatch:  # Manual trigger only

env:
  AWS_REGION: eu-central-1
  CLUSTER_NAME: sre-incident-demo-cluster
  APP_NAME: sre-demo-app
  ECR_REPOSITORY: sre-demo-app

jobs:
  deploy:
    runs-on: ubuntu-22.04  # Specific Ubuntu version for stability
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4.1.0  # Pinned version
      with:
        submodules: false
        
    - name: Setup Python 3.11
      uses: actions/setup-python@v4.7.0  # Pinned version
      with:
        python-version: '3.11.9'  # Specific Python version
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip==23.3.2
        pip install awscli==1.32.69 boto3==1.34.69
        
    - name: Setup Node.js 18
      uses: actions/setup-node@v4.1.0  # Pinned version
      with:
        node-version: '18.19.0'  # Specific Node.js version
        
    - name: Install AWS CLI v2
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64-2.15.42.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install
        aws --version
        
    - name: Install kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/v1.28.8/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/
        kubectl version --client
        
    - name: Install Helm
      run: |
        curl https://get.helm.sh/helm-v3.13.3-linux-amd64.tar.gz | tar xz
        sudo mv linux-amd64/helm /usr/local/bin/
        helm version
        
    - name: Install additional tools
      run: |
        sudo apt-get update
        sudo apt-get install -y jq=1.6-1ubuntu1 curl=7.68.0-1ubuntu2.18 wget=1.20.3-1ubuntu2 unzip=6.0-25ubuntu1.1 git=1:2.34.1-1ubuntu1.10
        curl -sL https://deb.nodesource.com/setup_18.x | sudo -E bash -
        sudo apt-get install -y nodejs=18.19.0-1nodesource1
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4.0.2  # Pinned version
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2.0.0  # Pinned version
      
    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.CLUSTER_NAME }}
        
    - name: Deploy application with Helm
      run: |
        # Get the latest image tag from ECR
        LATEST_IMAGE=$(aws ecr describe-images \
          --repository-name ${{ env.ECR_REPOSITORY }} \
          --region ${{ env.AWS_REGION }} \
          --query 'imageDetails[?imageTags[?contains(@, `latest`)]].imageTags[0]' \
          --output text)
        
        # Deploy using Helm
        helm upgrade --install ${{ env.APP_NAME }} ./helm/sre-demo-app \
          --set image.repository=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }} \
          --set image.tag=latest \
          --namespace default \
          --wait \
          --timeout 5m
          
    - name: Verify deployment
      run: |
        kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=${{ env.APP_NAME }} --timeout=300s
        kubectl get pods -l app.kubernetes.io/name=${{ env.APP_NAME }}
        kubectl get svc ${{ env.APP_NAME }}
        
    - name: Show deployment info
      run: |
        echo "‚úÖ Application deployed successfully!"
        echo "üåê Service URL: [MASKED]"
        echo ""
        echo "üìä Pod status: [MASKED]" 